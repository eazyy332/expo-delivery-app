import { Order } from '@/types/database';

export const mockOrders: Order[] = [
  // Facility Pickup Orders (Ready to be scanned)
  {
    id: 'mock-1',
    order_number: 'ORD-001',
    customer_name: 'Jan de Vries',
    shipping_address: 'Hoofdstraat 123, 1012 AB Amsterdam',
    pickup_date: new Date().toISOString(),
    status: 'ready_for_delivery',
    qr_code: 'QR-ORD-001-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'pickup',
    phone: '+31612345678',
    latitude: '52.3676',
    longitude: '4.9041',
    estimated_pickup_time: new Date(Date.now() + 1 * 60 * 60 * 1000).toISOString(), // 1 hour from now
    estimated_dropoff_time: new Date(Date.now() + 3 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: 'mock-2',
    order_number: 'ORD-002',
    customer_name: 'Maria Jansen',
    shipping_address: 'Kerkstraat 45, 3511 KV Utrecht',
    pickup_date: new Date().toISOString(),
    status: 'ready_for_delivery',
    qr_code: 'QR-ORD-002-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'pickup',
    phone: '+31687654321',
    latitude: '52.0907',
    longitude: '5.1214',
    estimated_pickup_time: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString(),
    estimated_dropoff_time: new Date(Date.now() + 4 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: 'mock-3',
    order_number: 'ORD-003',
    customer_name: 'Pieter Bakker',
    shipping_address: 'Molenweg 78, 3011 GJ Rotterdam',
    pickup_date: new Date().toISOString(),
    status: 'ready_for_delivery',
    qr_code: 'QR-ORD-003-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'pickup',
    phone: '+31611223344',
    latitude: '51.9225',
    longitude: '4.4792',
    estimated_pickup_time: new Date(Date.now() + 3 * 60 * 60 * 1000).toISOString(),
    estimated_dropoff_time: new Date(Date.now() + 5 * 60 * 60 * 1000).toISOString(),
  },
  
  // Scanned Orders (Ready for pickup)
  {
    id: 'mock-4',
    order_number: 'ORD-004',
    customer_name: 'Anna Smit',
    shipping_address: 'Bakkerstraat 12, 5611 EB Eindhoven',
    pickup_date: new Date().toISOString(),
    status: 'scanned',
    qr_code: 'QR-ORD-004-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'pickup',
    phone: '+31655667788',
    latitude: '51.4416',
    longitude: '5.4697',
    estimated_pickup_time: new Date(Date.now() + 30 * 60 * 1000).toISOString(), // 30 minutes from now
    estimated_dropoff_time: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: 'mock-5',
    order_number: 'ORD-005',
    customer_name: 'Lucas Visser',
    shipping_address: 'Schoolstraat 34, 9712 GR Groningen',
    pickup_date: new Date().toISOString(),
    status: 'scanned',
    qr_code: 'QR-ORD-005-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'pickup',
    phone: '+31699887766',
    latitude: '53.2194',
    longitude: '6.5665',
    estimated_pickup_time: new Date(Date.now() + 45 * 60 * 1000).toISOString(), // 45 minutes from now
    estimated_dropoff_time: new Date(Date.now() + 2 * 60 * 60 * 1000).toISOString(),
  },
  
  // In Transit Orders (Currently being delivered)
  {
    id: 'mock-6',
    order_number: 'ORD-006',
    customer_name: 'Emma de Boer',
    shipping_address: 'Prinsengracht 67, 1015 DX Amsterdam',
    pickup_date: new Date().toISOString(),
    status: 'in_transit_to_customer',
    qr_code: 'QR-ORD-006-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'delivery',
    phone: '+31633445566',
    latitude: '52.3651',
    longitude: '4.8858',
    estimated_pickup_time: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(), // 1 hour ago
    estimated_dropoff_time: new Date(Date.now() + 30 * 60 * 1000).toISOString(), // 30 minutes from now
    pickup_photo_url: 'https://via.placeholder.com/300x200/4CAF50/FFFFFF?text=Pickup+Photo',
  },
  {
    id: 'mock-7',
    order_number: 'ORD-007',
    customer_name: 'Thomas Mulder',
    shipping_address: 'Keizersgracht 89, 1016 CJ Amsterdam',
    pickup_date: new Date().toISOString(),
    status: 'in_transit_to_customer',
    qr_code: 'QR-ORD-007-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'delivery',
    phone: '+31677889900',
    latitude: '52.3667',
    longitude: '4.8945',
    estimated_pickup_time: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(), // 2 hours ago
    estimated_dropoff_time: new Date(Date.now() + 1 * 60 * 60 * 1000).toISOString(), // 1 hour from now
    pickup_photo_url: 'https://via.placeholder.com/300x200/4CAF50/FFFFFF?text=Pickup+Photo',
  },
  
  // Completed Orders (Delivered)
  {
    id: 'mock-8',
    order_number: 'ORD-008',
    customer_name: 'Sophie Jansen',
    shipping_address: 'Herengracht 23, 1015 BA Amsterdam',
    pickup_date: new Date().toISOString(),
    status: 'delivered',
    qr_code: 'QR-ORD-008-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'delivery',
    phone: '+31611223344',
    latitude: '52.3683',
    longitude: '4.8876',
    estimated_pickup_time: new Date(Date.now() - 4 * 60 * 60 * 1000).toISOString(),
    estimated_dropoff_time: new Date(Date.now() - 1 * 60 * 60 * 1000).toISOString(),
    pickup_photo_url: 'https://via.placeholder.com/300x200/4CAF50/FFFFFF?text=Pickup+Photo',
    delivery_photo_url: 'https://via.placeholder.com/300x200/2196F3/FFFFFF?text=Delivery+Photo',
    recipient_name: 'Sophie Jansen',
  },
  
  // Additional Route Orders
  {
    id: 'mock-9',
    order_number: 'ORD-009',
    customer_name: 'Max van der Berg',
    shipping_address: 'Leidseplein 12, 1017 PT Amsterdam',
    pickup_date: new Date().toISOString(),
    status: 'ready_for_delivery',
    qr_code: 'QR-ORD-009-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'pickup',
    phone: '+31655667788',
    latitude: '52.3641',
    longitude: '4.8897',
    estimated_pickup_time: new Date(Date.now() + 4 * 60 * 60 * 1000).toISOString(),
    estimated_dropoff_time: new Date(Date.now() + 6 * 60 * 60 * 1000).toISOString(),
  },
  {
    id: 'mock-10',
    order_number: 'ORD-010',
    customer_name: 'Lisa Klaassen',
    shipping_address: 'Museumplein 45, 1071 DJ Amsterdam',
    pickup_date: new Date().toISOString(),
    status: 'ready_for_delivery',
    qr_code: 'QR-ORD-010-2025',
    assigned_driver_id: 'demo-driver-001',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
    type: 'pickup',
    phone: '+31699887766',
    latitude: '52.3569',
    longitude: '4.8819',
    estimated_pickup_time: new Date(Date.now() + 5 * 60 * 60 * 1000).toISOString(),
    estimated_dropoff_time: new Date(Date.now() + 7 * 60 * 60 * 1000).toISOString(),
  }
];

export const mockDriver = {
  id: 'demo-driver-001',
  name: 'Demo Chauffeur',
  email: 'demo@eazyy.com',
  created_at: new Date().toISOString(),
};

export const mockFacility = {
  id: 'facility-001',
  name: 'Eazyy Amsterdam Hub',
  address: 'Amsterdam Centraal, Stationsplein 1, 1012 AB Amsterdam',
  latitude: '52.3792',
  longitude: '4.8994',
  operating_hours: '06:00 - 22:00',
  phone: '+31201234567',
};

export const mockRouteStops = [
  {
    id: 'stop-1',
    type: 'facility',
    name: 'Eazyy Amsterdam Hub',
    address: 'Amsterdam Centraal, Stationsplein 1, 1012 AB Amsterdam',
    estimatedTime: '08:00',
    action: 'Start Route',
    orders: ['ORD-001', 'ORD-002', 'ORD-003'],
  },
  {
    id: 'stop-2',
    type: 'pickup',
    name: 'Jan de Vries',
    address: 'Hoofdstraat 123, 1012 AB Amsterdam',
    estimatedTime: '08:30',
    action: 'Pickup Order ORD-001',
    orders: ['ORD-001'],
  },
  {
    id: 'stop-3',
    type: 'pickup',
    name: 'Maria Jansen',
    address: 'Kerkstraat 45, 3511 KV Utrecht',
    estimatedTime: '09:15',
    action: 'Pickup Order ORD-002',
    orders: ['ORD-002'],
  },
  {
    id: 'stop-4',
    type: 'pickup',
    name: 'Pieter Bakker',
    address: 'Molenweg 78, 3011 GJ Rotterdam',
    estimatedTime: '10:00',
    action: 'Pickup Order ORD-003',
    orders: ['ORD-003'],
  },
  {
    id: 'stop-5',
    type: 'delivery',
    name: 'Emma de Boer',
    address: 'Prinsengracht 67, 1015 DX Amsterdam',
    estimatedTime: '11:30',
    action: 'Deliver Order ORD-006',
    orders: ['ORD-006'],
  },
  {
    id: 'stop-6',
    type: 'delivery',
    name: 'Thomas Mulder',
    address: 'Keizersgracht 89, 1016 CJ Amsterdam',
    estimatedTime: '12:15',
    action: 'Deliver Order ORD-007',
    orders: ['ORD-007'],
  },
];
